version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    # working_directory: ~/code
    steps:
      - checkout
      # - run: npm install
      # - run: node -v
      # - run: npm test 
      - run: 
          name: Setup Variables -  Setting tags and image name and exporting to bash_env
          command: |
            if [ $CIRCLE_BRANCH = 'staging' ] || [ $CIRCLE_BRANCH = 'production' ] || [ $CIRCLE_BRANCH = 'main' ]; then
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}' >> $BASH_ENV
            fi
      # - setup_remote_docker:
      #     docker_layer_chaching: true
      - run:
          name: Build and push Docker image
          command: |
            if [ $CIRCLE_BRANCH = 'staging' ] || [ $CIRCLE_BRANCH = 'production' ] || [ $CIRCLE_BRANCH = 'main' ]; then
            docker build -t $DOCKER_ORG/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_ORG/$IMAGE_NAME:$TAG
            fi
      - run:
          name: Deploy docker container to correct server for each environment
          command: |
            if [ $CIRCLE_BRANCH = 'staging' ]; then
            ssh -o StrictHostKeyChecking=no ${STAGING_SSH_USER}@${STAGING_IP} "/bin/bash ~/deploy/docker-kong.sh $DOCKER_ORG/$IMAGE_NAME:$TAG $IMAGE_NAME $DOCKER_LOGIN $DOCKER_PWD"
            fi
            if [ $CIRCLE_BRANCH = 'production' ]; then
            ssh -o StrictHostKeyChecking=no ${PRODUCTION_SSH_USER}@${PRODUCTION_IP} "/bin/bash ~/deploy/docker-kong.sh $DOCKER_ORG/$IMAGE_NAME:$TAG $IMAGE_NAME $DOCKER_LOGIN $DOCKER_PWD"
            fi
            if [ $CIRCLE_BRANCH = 'main' ]; then
            ssh -o StrictHostKeyChecking=no ${PRODUCTION_SSH_USER}@${PRODUCTION_IP} "/bin/bash ~/deploy/docker-kong.sh $DOCKER_ORG/$IMAGE_NAME:$TAG $IMAGE_NAME $DOCKER_LOGIN $DOCKER_PWD"
            fi

